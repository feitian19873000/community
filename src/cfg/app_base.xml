<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="  
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd  
       ">
    <!-- 引入hibernate和数据源数据 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:cfg/jdbc.properties</value>
            </list>
        </property>
    </bean>
    
    <!-- c3p0数据连接池 -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${connection.driver_class}" />
		<property name="jdbcUrl" value="${connection.url}" />
		<property name="user" value="${connection.username}" />
		<property name="password" value="${connection.password}" />
		
        <property name="minPoolSize" value="${proxool.minimum.size}" />
        <property name="maxPoolSize" value="${proxool.maximum.size}" />
        <property name="initialPoolSize" value="${proxool.initial.size}" />
        <property name="maxIdleTime" value="${proxool.maxIdle.time}" />
        <property name="acquireIncrement" value="${proxool.acquire.increment}" />
        <property name="maxStatements" value="${proxool.max.statement}" />
        <property name="idleConnectionTestPeriod" value="${proxool.test.period}" />
        <property name="acquireRetryAttempts" value="${proxool.retry.attempts}" />
        <property name="breakAfterAcquireFailure" value="${proxool.acquire.failure}" />
        <property name="testConnectionOnCheckout" value="${proxool.validate}" />
	</bean>

	<!-- 当连接不通数据源时，可以定义多个 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect" >${hibernate.dialect}</prop>
				<prop key="hibernate.current_session_context_class">${hibernate.current_session_context_class}</prop>
				<prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>  
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.autoReconnect">${hibernate.autoReconnect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
		<!-- 加载hibernate实体类对应*.hbm.xml的配置文件 -->
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath*:com/frame/base/model</value>
			</list>
		</property>
	</bean>

	<!-- spring访问数据库模板 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
		abstract="false" lazy-init="false" autowire="default">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

	<!-- 配置事务管理器 start -->
	<bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	<!-- 配置事务管理器 end -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
	   <tx:attributes>
	       <tx:method name="save*" propagation="REQUIRED" />
	       <tx:method name="add*" propagation="REQUIRED" />
	       <tx:method name="create*" propagation="REQUIRED" />
	       <tx:method name="insert*" propagation="REQUIRED" />
	       <tx:method name="update*" propagation="REQUIRED" />
	       <tx:method name="merge*" propagation="REQUIRED" />
	       <tx:method name="del*" propagation="REQUIRED" />
	       <tx:method name="remove*" propagation="REQUIRED" />
	       <tx:method name="put*" propagation="REQUIRED" />
	       <tx:method name="use*" propagation="REQUIRED"/>
	       <!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到-->
	        <tx:method name="get*" propagation="REQUIRED" read-only="true" />
	        <tx:method name="count*" propagation="REQUIRED" read-only="true" />
	        <tx:method name="find*" propagation="REQUIRED" read-only="true" />
	        <tx:method name="list*" propagation="REQUIRED" read-only="true" />
	        <tx:method name="*" read-only="true" />
	    </tx:attributes>
	</tx:advice>
	<aop:config expose-proxy="true">
	    <!-- 对frame中service层实施事务 -->
	    <aop:pointcut id="framePointcut" expression="execution(* com.frame..service..*.*(..))" />
	    <aop:advisor advice-ref="txAdvice" pointcut-ref="framePointcut"/>
	</aop:config>
	
	<!-- 开启AOP监听 只对当前配置文件有效 -->
	<aop:aspectj-autoproxy expose-proxy="true"/>
	
	<!-- 开启注解事务 只对当前配置文件有效 -->
  	<tx:annotation-driven transaction-manager="txManager"/>
  	
  	<!-- 通过exclude-filter 把所有 @Controller注解的表现层控制器组件排除 ,多个包用都好隔开或从新定义一个 -->
  	<context:component-scan base-package="com.frame.base" >
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
</beans>