<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.2.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd" >    
        
	<!--注解说明,自动向spring容器注册AutowiredAnnotationBeanPostProcessor、CommonAnnotationBeanPostProcessor、
		PersistenceAnnotationBeanPostProcessor 以及 RequiredAnnotationBeanPostProcessor这4个BeanPostProcessor -->
    <context:annotation-config />
    
    <!-- ①:开启controller注解支持,以完成Bean创建和自动依赖注入的功能,多个包用都好隔开或从新定义一个 -->  
	<!-- 注：如果base-package=com.frame.base 则注解事务不起作用--> 
	<context:component-scan base-package="com.frame.base.control" />
    
    <!-- ②：启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
    
    <!-- ③：对模型视图名称的解析，即在模型视图名称添加前后缀 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
        <property name="contentType">
			<value>text/html;charset=UTF-8</value>
		</property>
    </bean>
    
    <!-- start 拦截器 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
    	<property name="interceptors">
    		<list>
    			<!-- 拦截未登录用户 -->
    			<bean class="com.util.handler.LoginAnnotationInterceptor" />
    		</list>
    	</property>
    </bean>
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>
	<!-- end 拦截器 -->
	
	<!-- start 页面异常捕获 -->	
	<bean id="exceptionHandler" class="com.util.handler.MyExceptionHandler"/>
	<!-- end 页面异常捕获 -->

</beans>
